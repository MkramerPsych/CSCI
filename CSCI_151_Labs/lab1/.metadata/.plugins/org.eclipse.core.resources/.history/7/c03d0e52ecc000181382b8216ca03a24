import java.util.*; //Import java utility package

/*
 * 
 * Author: Max Kramer
 */

public class MyArrayList<E> extends AbstractList<E> { //declare generic class MyArrayList
	
	//INSTANCE VARIABLES
	int size; //create variable size
	E[] data; //create array data
	
	//CONSTRUCTORS
	@SuppressWarnings("unchecked")
	MyArrayList(int startLength){ //constructor with initial capacity
		size = startLength; //initialize size
		data = (E[]) new Object[5]; //initialize data
		
	}
	
	MyArrayList(){ //empty constructor using default capacity
		this(5); //set initial capacity default to 5
	}
	
	//METHODS
	@SuppressWarnings("unchecked")
	private void resize() { //doubles length of the array
		System.out.println("Old size: " + data.length); //print old array length
		E[] newArray = (E[]) new Object[2*data.length]; //create new array of double length
		for (int i = 0; i < data.length; i++) { //data.length repeats
			newArray[i] = data[i]; //copy from data to newArray
		}
		this.data = newArray;
		System.out.println("New size: " + data.length); //print new array length
	}
	
	public int size() { //return # of items in array
		return size;
	}
		
	public void add(int index, E element) { //add element E at index int
		for(int i = 0; i < data.length; i++) {
			if (i < index) {
				continue;
			}
			
			else {
				data[i+1] = data[i];
			}
		}
		data[index] = element; //add element to data at index index
		
		if (index > size) //throw exception if index is out of range
			throw new IndexOutOfBoundsException("Index Out of Bounds! You tried to get " +
			index + " but the size is " + size );


	}
	
	

	
	
	
	
}
